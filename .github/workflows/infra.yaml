name: Infrasture Deployment
on:
  workflow_dispatch:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write


concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  infra:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Checkout
        uses: actions/checkout@v4
      - name: Setting up terraform
        uses: hashicorp/setup-terraform@v3
      - name: Create ECR with terraform
        run: |
          cd infra
          terraform init
          terraform apply -target aws_ecr_repository.lambda_ecr --auto-approve
          ECR_URL=$(terraform output -raw ecr_url)
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_URL
      - name: Building and Pushing Docker
        run: |
          cd infra
          ECR_URL=$(terraform output -raw ecr_url)
          cd ..
          docker build -t lambda_docker:latest .
          docker tag lambda_docker:latest $ECR_URL:latest
          docker push $ECR_URL:latest
      - name: Deploying Lambda
        run: |
          cd infra
          terraform apply --auto-approve
          LAMBDA_URL=$(terraform output -raw function_url)

  deploy:
    needs: infra
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setting up terraform
        uses: hashicorp/setup-terraform@v3
      - name: Patching up file with Lambda URL
        run: |
          cd infra
          terraform init
          LAMBDA_URL=$(terraform output -raw function_url)
          cd ../static
          lambda_url=$LAMBDA_URL lambda_temp="__LAMBDA_URL__" ../update_all.sh

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './static'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
